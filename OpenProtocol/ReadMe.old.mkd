# 摘要
我创建这个是为了更方便的解析传输的数据，比如通过串口或者tcp传输的数据，格式如下  

头部、数据类型、数据长度、数据、校验、尾部  

我想将这部分生成和解析功能拆分出来。总之，我想要如下的  
   - 根据各个数据，然后导出字节数组，可以发送的。
   - 根据字节数组，导出数据。

我看看可以类似json的方式，注解的方式来构造这个包。其实就是序列化和反序列化。  
关于注解，有如下几种类型  

   - 序号，这个字段在协议的第几项。
   - 整数，要区分字节数，是否有符号以及大小端
   - 浮点数，这个要注意大小端。
   - 校验和，校验和起始位置，校验和结束位置
   - 字节数组，可以有固定的长度，也可以由别的字段提供长度。

我做成共享项目是为了支持所有的平台。

两个重要的接口  
   - IProtocol ： 协议接口，负责大方向的序列化的
   - IItem     :  项目接口，协议中项目的信息。

我想要尽量少的操作，完成尽量多的功能，这个类似orm，对象跟传输的数据存在对应关系，
还有注意一点，很多通讯协议中比如一个16位寄存器中是1000，但实际数值需要除以100，我这里不做这个功能。

尽量少的操作，我这里只是需要如下的项目类型  
   - 序号：
   - 字节序  ： 大小端
   - 校验    ： 比如校验和
   - 长度类型 ：  由别的属性提供数组的长度（元素个数）。

规范是，固定的数据用字段来表示，而变化的数据用属性来表示。  

判断是否合法的部分，是分两部分判断的，第一部分是外层判断字节数是否够，第二部分是内层的判断，两个依据，一个是是否同固定的，而另一个是校验和。
固定的部分只是判断当前字段的，而校验和是判断别的字段的，所以这里的判断交给外部判断吧。

# 思路

不管序列化还是反序列化，都需要先解析注解，下边以反序列化为例子  
   - 收到字节数组和对象类型
   - 筛选出所有的有注解的属性或者字段。
   - 按照序号顺序执行，取得每一个注解，然后判断这个注解是否合法。
      - 不合法的有两种，一种是固定的字段不符合的
      - 另一种是校验和。
      - 至于变量，大多数还是符合的，以后看看这个变量的范围。

有个问题，就是后边的数据类型是根据前面的字段的值来决定的,我打算增加条件，比如根据某个属性是某个值来判断，为了减少复杂性，我这里不递归处理对象的属性是另一个自定义类型的情况。比如modbus，  
modbus的帧结构是：  

地址 功能码  数据  校验   

17:07:07 发-> :01 03 00 00 00 09 85 cc
17:07:07 收<- :01 03 12 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 a3 12 

为了支持收到的数据是变化的，我这里提出优先级，
   - 默认多少个                                       DefaultSize
   - 在某个变量为某个值的情况下，固定多少个。         StaticSizeByOther
   - 在某个变量为某个值的情况下，某个变量的值是个数   VarSizeByOther
   - 其他情况，按照属性的数据类型来判断多少个。

关于数据方面，有如下要求。  
   - 整数类型，包括8位，16位，32位，有没有负号。
   - 浮点数类型
   - 数组类型，
   - 是否是固定的数据
   - 支持倍数。
   - 尺寸大小根据别的字段变化
   - 序号

判断这个字段占用几个字节的依据是  
   - 首先判断是否有默认多少个，如果有，就先当作多少个。
   - 其次判断是否是根据其他变量的值，如果有，就当作多少个。
   - 如果如上2种情况都没有，就根据数据类型来判断。

关于字段部分，暂时只支持byte和byte[]两种类型。